<?xml version='1.0'?>
<!--
  ~ Copyright (C) 2005-2017 Schlichtherle IT Services.
  ~ All rights reserved. Use is subject to license terms.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
#if($ftpKeyStoreFile == "-")
#set($ftpKeyStoreFile = $publicKeyStoreFile)
#end
#if($keyStoreType == "auto")
#if($licenseKeyFormat == "V1")
#set($keyStoreType = "JKS")
#else
#set($keyStoreType = "JCEKS")
#end
#end
#if($pbeAlgorithm == "auto")
#if($licenseKeyFormat == "V1")
#set($pbeAlgorithm = "PBEWithMD5AndDES")
#else
#set($pbeAlgorithm = "PBEWithSHA1AndDESede")
#end
#end
#if($licenseKeyFormat == "V1")
#set($trueLicenseArtifactId = "truelicense-v1")
#elseif($licenseKeyFormat == "V2/JSON")
#set($trueLicenseArtifactId = "truelicense-v2-json")
#else
#set($trueLicenseArtifactId = "truelicense-v2-xml")
#end
#set($delimiter = "[, \t\r\n]+")
#set($dollar = '$')
#set($editionArray = $editions.split($delimiter))
    <modelVersion>4.0.0</modelVersion>

    <groupId>$groupId</groupId>
    <artifactId>$artifactId</artifactId>
    <version>$version</version>
    <packaging>pom</packaging>

#if($artifactName != "-")
    <name>$artifactName</name>
#end
    <description>The parent POM for all license management modules.</description>
    <url>http://www.todo.com/</url>
    <licenses>
        <!-- TO DO: Fill in the gaps. -->
    </licenses>
    <organization>
        <name>${dollar}{company}</name>
        <!-- TO DO: Fill in the gaps. -->
    </organization>
    <developers>
        <!-- TO DO: Fill in the gaps. -->
        <developer>
            <name>Christian Schlichtherle</name>
            <email>christian AT schlichtherle DOT de</email>
                <organization>Schlichtherle IT Services</organization>
            <timezone>1</timezone>
            <roles>
                <role>template author</role>
            </roles>
            <properties>
                <picUrl>http://www.gravatar.com/avatar/e2f69ddc944f8891566fc4b18518e4e6.png</picUrl>
            </properties>
        </developer>
    </developers>
    <issueManagement>
        <!-- TO DO: Fill in the gaps. -->
    </issueManagement>
    <scm>
        <!-- TO DO: Fill in the gaps. -->
    </scm>

    <properties>

        <!-- The delimiter for editions. -->
        <delimiter>$delimiter</delimiter>

        <!-- The distinguished name to use when generating private key entries
             in keystores and initializing the issuer in license beans. -->
        <distinguishedName>CN=${dollar}{company}</distinguishedName>

        <!-- The alias of the entry with the private key for the edition
             "ftp" in the FTP keystore file ${dollar}{ftpKeyStoreFile} in the
             Key Manager module.
             The value of this property is ignored if the value of the property
             "freeTrialPeriod" is "0".
             Otherwise, if this property is not defined, then it defaults to
             the feature set name. -->
        <ftpKeyEntryAlias>ftp</ftpKeyEntryAlias>

        <!-- The password for accessing the private key for the edition
             "ftp" in the FTP keystore file ${dollar}{ftpKeyStoreFile} in the
             Key Manager module.
             The value of this property is ignored if the value of the property
             "freeTrialPeriod" is "0".
             Otherwise, if this property is not defined, then it defaults to
             the value of the ftpKeyStorePassword property. -->
        <ftpKeyEntryPassword>${dollar}{ftpKeyStorePassword}</ftpKeyEntryPassword>

        <!-- The password for verifying the integrity of the FTP keystore file
             ${dollar}{ftpKeyStoreFile} in the Key Manager module.
             The value of this property is ignored if the value of the property
             "freeTrialPeriod" is "0". -->
        <ftpKeyStorePassword>${dollar}{password}</ftpKeyStorePassword>

        <!-- The type of the FTP keystore file ${dollar}{ftpKeyStoreFile} in
             the Key Manager module.
             The value of this property is ignored if the value of the property
             "freeTrialPeriod" is "0". -->
        <ftpKeyStoreType>${dollar}{keyStoreType}</ftpKeyStoreType>

        <!-- The password for verifying the integrity of the private keystore
             file ${dollar}{privateKeyStoreFile} in the Key Generator module. -->
        <privateKeyStorePassword>${dollar}{password}</privateKeyStorePassword>

        <!-- The type of the private keystore file
             ${dollar}{privateKeyStoreFile} in the Key Generator module. -->
        <privateKeyStoreType>${dollar}{keyStoreType}</privateKeyStoreType>

        <!-- The password for verifying the integrity of the public keystore
             file ${dollar}{publicKeyStoreFile} in the Key Manager module. -->
        <publicKeyStorePassword>${dollar}{password}</publicKeyStorePassword>

        <!-- The type of the public keystore file
             ${dollar}{publicKeyStoreFile} in the Key Manager module. -->
        <publicKeyStoreType>${dollar}{keyStoreType}</publicKeyStoreType>

        <!-- The name of the module to depend upon for base functionality like
             vending or consuming license keys.
             One of "truelicense-core" or "truelicense-json".
             If the ${dollar}{licenseKeyFormat} property is set to "V2/JSON",
             then this needs to be set to "truelicense-json", otherwise set it
             to "truelicense-core". -->
        <trueLicenseArtifactId>$trueLicenseArtifactId</trueLicenseArtifactId>
#foreach($edition in $editionArray)

        <!-- The password for encrypting license keys for the edition
             "$edition".
             If this property is not defined, then it defaults to ${password}. -->
        <PbePassword prefix="${edition}">${dollar}{password}</PbePassword>

        <!-- The alias of the entry with the private key for the edition
             "$edition" in the private keystore file ${dollar}{privateKeyStoreFile}
             in the Key Generator module and the public keystore file
             ${dollar}{publicKeyStoreFile} in the Key Manager module.
             If this property is not defined, then it defaults to the feature
             set name. -->
        <KeyEntryAlias prefix="${edition}">$edition</KeyEntryAlias>

        <!-- The password for accessing the private key for the edition
             "$edition" in the private keystore file ${dollar}{privateKeyStoreFile} in
             the Key Generator module.
             If this property is not defined, then it defaults to the value of
             the privateKeyStorePassword property. -->
        <KeyEntryPassword prefix="${edition}">${dollar}{privateKeyStorePassword}</KeyEntryPassword>
#end

        <!--
          - The following properties control the behavior of some Maven plugins
          - and are not intended to be used by the Velocity template files.
          -->

        <!-- maven-enforcer-plugin -->
        <!-- As detected by mvn versions:display-plugin-updates, except versions
             3.3.1 and 3.3.3, which would fail with a ClassNotFoundException
             when running the TrueLicense Maven Plugin.
             See https://jira.codehaus.org/browse/MNG-5787 and
             https://java.net/jira/browse/TRUELICENSE-87 .
             -->
        <maven.enforcer.requireMavenVersion>3.5.4</maven.enforcer.requireMavenVersion>
        <maven.enforcer.requireJavaVersion>${dollar}{maven.compiler.source}</maven.enforcer.requireJavaVersion>

        <netbeans.compile.on.save>none</netbeans.compile.on.save>
        <netbeans.hint.jdkPlatform>JDK_1.8</netbeans.hint.jdkPlatform>

        <!-- Reinforce defaults of maven-compiler-plugin for NetBeans. -->
        <maven.compiler.debug>true</maven.compiler.debug>
        <maven.compiler.optimize>false</maven.compiler.optimize>
        <maven.compiler.showDeprecation>true</maven.compiler.showDeprecation>
        <maven.compiler.showWarnings>true</maven.compiler.showWarnings>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>${dollar}{maven.compiler.source}</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!-- maven-failsafe-plugin -->
        <project.reporting.outputEncoding>${dollar}{project.build.sourceEncoding}</project.reporting.outputEncoding>

        <!-- maven-gpg-plugin -->
        <gpg.useagent>true</gpg.useagent>

        <!-- maven-javadoc-plugin -->
        <additionalparam/>
        <!--detectLinks>true</detectLinks-->
        <header><![CDATA[<b>${dollar}{project.name} ${dollar}{project.version}</b>]]></header>
        <nodeprecated>true</nodeprecated>
        <notimestamp>true</notimestamp>
        <quiet>true</quiet>
        <splitindex>true</splitindex>
        <javadoc.version>false</javadoc.version>

        <!-- maven-release-plugin -->
        <preparationGoals>clean install</preparationGoals>

        <!--
          - # Important Notes
          -
          - The following properties have been configured by the TrueLicense
          - Maven Archetype.
          -
          - 1. **If you want to change the value of any of the following
          -    properties then it's generally necessary to generate another
          -    project from the TrueLicense Maven Archetype.**
          - 2. **For any two generated projects, their license keys are not
          -    compatible even if all property values are equal, unless both
          -    projects also share a copy of the same keystore files:**
          -     * `${artifactId}-keygen/src/main/resources/${dollar}{privateKeyStoreFile}`,
          -     * `${artifactId}-keymgr/src/main/resources/${dollar}{ftpKeyStoreFile}` and
          -     * `${artifactId}-keymgr/src/main/resources/${dollar}{publicKeyStoreFile}`.
          -->
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>${dollar}{project.groupId}</groupId>
                <artifactId>${rootArtifactId}-keygen</artifactId>
                <version>${dollar}{project.version}</version>
            </dependency>
            <dependency>
                <groupId>${dollar}{project.groupId}</groupId>
                <artifactId>${rootArtifactId}-keymgr</artifactId>
                <version>${dollar}{project.version}</version>
            </dependency>

            <dependency>
                <groupId>global.namespace.truelicense</groupId>
                <artifactId>truelicense</artifactId>
                <version>${dollar}{trueLicenseVersion}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <resources>
            <resource>
                <directory>src/main/filtered</directory>
                <filtering>true</filtering>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
        </resources>

        <testResources>
            <testResource>
                <directory>src/test/filtered</directory>
                <filtering>true</filtering>
            </testResource>
            <testResource>
                <directory>src/test/resources</directory>
            </testResource>
        </testResources>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>com.soebes.maven.plugins</groupId>
                    <artifactId>iterator-maven-plugin</artifactId>
                    <version>0.5.1</version>
                    <configuration>
                        <delimiter>${dollar}{delimiter}</delimiter>
                    </configuration>
                </plugin>
                <plugin>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>3.1.0</version>
                </plugin>
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.7.0</version>
                </plugin>
                <plugin>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>2.8.2</version>
                </plugin>
                <plugin>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>3.0.0-M1</version>
                </plugin>
                <plugin>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>2.21.0</version>
                    <executions>
                        <execution>
                            <id>integration-test</id>
                            <goals>
                                <goal>integration-test</goal>
                                <goal>verify</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <artifactId>maven-gpg-plugin</artifactId>
                    <version>1.6</version>
                </plugin>
                <plugin>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>2.5.2</version>
                </plugin>
                <plugin>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>3.1.0</version>
                </plugin>
                <plugin>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>3.0.0</version>
                    <configuration>
                        <version>${dollar}{javadoc.version}</version>
                    </configuration>
                </plugin>
                <plugin>
                    <artifactId>maven-project-info-reports-plugin</artifactId>
                    <version>2.9</version>
                    <configuration>
                        <dependencyLocationsEnabled>false</dependencyLocationsEnabled>
                    </configuration>
                </plugin>
                <plugin>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>2.5.3</version>
                </plugin>
                <plugin>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.1.0</version>
                </plugin>
                <plugin>
                    <artifactId>maven-scm-plugin</artifactId>
                    <version>1.9.5</version>
                </plugin>
                <plugin>
                    <artifactId>maven-shade-plugin</artifactId>
                    <version>3.1.1</version>
                    <configuration>
                        <filters combine.children="append">
                            <filter>
                                <artifact>*:*</artifact>
                                <excludes>
                                    <exclude>META-INF/services/javax.annotation.processing.Processor</exclude>
                                </excludes>
                            </filter>
                        </filters>
                        <shadedArtifactAttached>true</shadedArtifactAttached>
                        <shadedClassifierName>standalone</shadedClassifierName>
                        <transformers combine.children="append">
                            <transformer implementation="org.apache.maven.plugins.shade.resource.ApacheLicenseResourceTransformer"/>
                            <transformer implementation="org.apache.maven.plugins.shade.resource.ApacheNoticeResourceTransformer">
                                <addHeader>false</addHeader>
                            </transformer>
                            <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
                            <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                <mainClass>${mainClass}</mainClass>
                            </transformer>
                        </transformers>
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>shade</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>3.7.1</version>
                </plugin>
                <plugin>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>3.0.1</version>
                </plugin>
                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.21.0</version>
                </plugin>
                <plugin>
                    <groupId>com.github.wvengen</groupId>
                    <artifactId>proguard-maven-plugin</artifactId>
                    <version>2.0.14</version>
                    <configuration>
                        <injar>${dollar}{project.build.finalName}-standalone.jar</injar>
                        <outjar>${dollar}{project.build.finalName}-guarded.jar</outjar>
                        <!-- Not required with maven-shade-plugin. -->
                        <includeDependency>false</includeDependency>
                        <libs combine.children="append">
                            <lib>${dollar}{java.home}/lib/jce.jar</lib>
                            <lib>${dollar}{java.home}/lib/rt.jar</lib>
                        </libs>
                        <!-- The following options are required for
                             TrueLicense 4. -->
                        <options combine.children="append">
#if($licenseKeyFormat == "V1")
                            <option>
#else
                            <!--option>
#end
                                -keepnames class de.schlichtherle.license.LicenseContent
                                -keepclassmembers class de.schlichtherle.license.LicenseContent {
                                    public *** get*();
                                    public void set*(***);
                                }
                                -keepnames class de.schlichtherle.xml.GenericCertificate
                                -keepclassmembers class de.schlichtherle.xml.GenericCertificate {
                                    public *** get*();
                                    public void set*(***);
                                }
#if($licenseKeyFormat != "V1")
                            </option-->
#else
                            </option>
#end
#if($licenseKeyFormat.startsWith("V2/"))
                            <option>
#else
                            <!--option>
#end
                                -keepclassmembers class V2RepositoryModel {
                                    public *** get*();
                                    public void set*(***);
                                }
#if(!$licenseKeyFormat.startsWith("V2/"))
                            </option-->
#else
                            </option>
#end

                            <option>
                                -adaptresourcefilenames
                                -keepclassmembers class * extends global.namespace.truelicense.api.License {
                                    public *** get*();
                                    public void set*(***);
                                }
                                -keep,allowobfuscation class global.namespace.truelicense.api.codec.X500PrincipalXmlAdapter
                                -keepclassmembers class global.namespace.truelicense.jax.rs.dto.*DTO {
                                    *;
                                }
                                -keepclassmembers enum * {
                                    public static **[] values();
                                    public static ** valueOf(java.lang.String);
                                }
                                -keepattributes *Annotation*,EnclosingMethod,InnerClasses,Signature
                            </option>

                            <!-- This optimization triggers error messages when
                                 using ProGuard 4.11, 5.0, 5.1, 5.2, 5.2.1, 5.3.2 and 6.0.3
                                 and the generated byte code throws
                                 VerifyErrors. -->
                            <option>
                                -optimizations !class/unboxing/enum
                            </option>

                            <!-- This option configures the obfuscation of the
                                 Jackson JSON Processor, version 2.7.0.
                                 You should remove this option if you are not
                                 using the V2/JSON license key format. -->
#if($licenseKeyFormat == "V2/JSON")
                            <option>
#else
                            <!--option>
#end
                                -keep class * extends com.fasterxml.jackson.core.util.VersionUtil
#if($licenseKeyFormat != "V2/JSON")
                            </option-->
#else
                            </option>
#end
                        </options>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>net.sf.proguard</groupId>
                            <artifactId>proguard-base</artifactId>
                            <version>6.0.3</version>
                            <scope>runtime</scope>
                        </dependency>
                    </dependencies>
                    <executions>
                        <execution>
                            <goals>
                                <goal>proguard</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>global.namespace.truelicense</groupId>
                    <artifactId>truelicense-maven-plugin</artifactId>
                    <version>${dollar}{trueLicenseVersion}</version>
                    <executions>
                        <execution>
                            <id>obfuscate-main-classes</id>
                            <goals>
                                <goal>obfuscate-main-classes</goal>
                            </goals>
                            <configuration>
                                <intern>false</intern>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>keytool-maven-plugin</artifactId>
                    <version>1.5</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <artifactId>maven-enforcer-plugin</artifactId>
                <executions>
                    <execution>
                        <id>enforce-maven</id>
                        <configuration>
                            <rules>
                                <requireMavenVersion>
                                    <version>${dollar}{maven.enforcer.requireMavenVersion}</version>
                                </requireMavenVersion>
                                <requireJavaVersion>
                                    <version>${dollar}{maven.enforcer.requireJavaVersion}</version>
                                </requireJavaVersion>
                            </rules>
                        </configuration>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>non-transitive-test-source-dependencies</id>
            <activation>
                <file>
                    <exists>src/test</exists>
                </file>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>junit</groupId>
                    <artifactId>junit</artifactId>
                    <scope>test</scope>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <id>generate-main-sources</id>
            <activation>
                <file>
                    <exists>src/main</exists>
                </file>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>global.namespace.truelicense</groupId>
                        <artifactId>truelicense-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>generate-main-sources</id>
                                <goals>
                                    <goal>generate-main-sources</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>generate-test-sources</id>
            <activation>
                <file>
                    <exists>src/test</exists>
                </file>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>global.namespace.truelicense</groupId>
                        <artifactId>truelicense-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>generate-test-sources</id>
                                <goals>
                                    <goal>generate-test-sources</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>integration-test</id>
            <activation>
                <file>
                    <exists>src/test</exists>
                </file>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-failsafe-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <!-- Remove redundant JAXB dependencies because they cause ProGuard to fail the build. -->
            <id>exclude-jaxb-dependencies-before-jdk9</id>
            <activation>
                <jdk>[,9)</jdk>
            </activation>
            <dependencyManagement>
                <dependencies>
                    <dependency>
                        <groupId>global.namespace.truelicense</groupId>
                        <artifactId>truelicense-jax-rs</artifactId>
                        <version>${dollar}{trueLicenseVersion}</version>
                        <exclusions>
                            <exclusion>
                                <groupId>javax.xml.bind</groupId>
                                <artifactId>jaxb-api</artifactId>
                            </exclusion>
                        </exclusions>
                    </dependency>
                    <dependency>
                        <groupId>global.namespace.fun-io</groupId>
                        <artifactId>fun-io-jaxb</artifactId>
                        <exclusions>
                            <exclusion>
                                <groupId>javax.xml.bind</groupId>
                                <artifactId>jaxb-api</artifactId>
                            </exclusion>
                        </exclusions>
                    </dependency>
                </dependencies>
            </dependencyManagement>
        </profile>
    </profiles>
</project>
