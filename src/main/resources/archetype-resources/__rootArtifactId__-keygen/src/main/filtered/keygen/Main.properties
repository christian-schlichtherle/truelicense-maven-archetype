#
# Copyright (C) 2005-2015 Schlichtherle IT Services.
# All rights reserved. Use is subject to license terms.
#
USAGE.usage=\
Usage:\n\
\n\
\t%s <command> [<options>] [<parameters>]\n\
\n\
where <command> is one of (case is ignored):\n\n
HELP.usage=\thelp\t\tprint usage instructions for a command\n
HELP.help=\
Usage:\n\
\n\
\thelp <command>\n\
\n\
Prints usage instructions for the given <command>.\n
VERSION.usage=\tversion\t\tprint version information\n
VERSION.help=\
Usage:\n\
\n\
\tversion\n\
\n\
Prints version information.\n
VERSION.version=%s ${project.version}\n
GENERATE.usage=\tgenerate\tgenerates a license key\n
GENERATE.help=\
Usage:\n\
\n\
\tgenerate [[-key]  <license-key-path>   ] |\n\
\t         [-input  <input-license-path> ] |\n\
\t         [-output <output-license-path>] |\n\
\t         [-edition <edition>] |\n\
\t         [-verbose <boolean>]\n\
\n\
Generates a license key and prints its license bean to standard output. If a\n\
<license-key-path> is specified, then the generated license key gets saved to\n\
the file identified by this path.\n\
\n\
If an <input-license-path> is specified, then the license bean gets decoded\n\
from the file identified by this path and transformed into the license key.\n\
Specifying a dash (-) causes the standard input stream to be used instead of a\n\
file. If no <input-license-path> is specified, then a default license bean gets\n\
created and transformed into the license key.\n\
\n\
If an <output-license-path> is specified, then the license bean gets encoded to\n\
the file identified by this path for subsequent editing and input to this\n\
command. Specifying a dash (-) causes the standard output stream to be used\n\
instead of a file.\n\
\n\
If more than edition has been configured in the licensing schema, then a\n\
<edition> must be specified on the command line.\n\
\n\
By default, this command #if($verboseCli == true)writes#{else}does not write#{end} debugging information to the standard\n\
error stream. You can override the default behavior by specifying\n\
`-verbose true` or `-verbose false`.\n
